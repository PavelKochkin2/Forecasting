using System;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.InteropServices;

namespace ConsoleApplication1
{
    internal class Program
    {
        public static Forecaster forecaster = new Forecaster();

        public static void Main(string[] args)
        {
            var rand = new Random();

            List<double> sses = new List<double>();

            List<Tuple<double, double, double, double>> all = new List<Tuple<double, double, double, double>>();


            for (double alpha = 0.01; alpha < 1; alpha= alpha + 0.01)
            {
                for (double beta = 0.01; beta < 1; beta= beta + 0.01)
                {
                    for (double gamma = 0.01; gamma < 1; gamma= gamma + 0.01)
                    {
                        List<double> result =
                            forecaster.Triple_Exponential_Smoothing(CallsData.calls_for_2015_2016, 12, alpha, beta, gamma,
                                12);

                        double[] sse = new Double [result.Count];

                        for (int i = 0; i < result.Count; i++)
                        {
                            var res = result.ToArray()[i];
                            var call = CallsData.calls_for_2015_2016_2017[i];

                            sse[i] = Math.Pow((1 - Math.Min(res, call) / Math.Max(res, call)), 2);
                        }

                        double sseResult = sse.Sum();
                
                        sses.Add(sseResult);

                        all.Add(new Tuple<double, double, double, double>(alpha, beta, gamma, sseResult));
                    }
                }
            }
            



/*
            for (int ctr = 0; ctr <= 1000000; ctr++)
            {
                alpha = rand.NextDouble();
                beta = rand.NextDouble();
                gamma = rand.NextDouble();

                List<double> result =
                    forecaster.Triple_Exponential_Smoothing(CallsData.calls_for_2015_2016, 12, alpha, beta, gamma,
                        12);

                double[] sse = new Double [result.Count];

                for (int i = 0; i < result.Count; i++)
                {
                    sse[i] = Math.Pow(CallsData.calls_for_2015_2016_2017[i] - result.ToArray()[i], 2);
                }

                double sseResult = sse.Sum();
                
                sses.Add(sseResult);

                all.Add(new Tuple<double, double, double, double>(alpha, beta, gamma, sseResult));
            }
            */

            sses.Sort();
            all.Sort((x, y) => y.Item4.CompareTo(x.Item4));
            var smallestSse = sses.First();
            var cooficents = all.Find(i => i.Item4 == smallestSse);


            List<double> finalResult =
                forecaster.
                    Triple_Exponential_Smoothing(CallsData.calls_for_2015_2016, 12,  cooficents.Item1, cooficents.Item2, cooficents.Item3,
                        12);
        }
    }

    class Forecaster
    {
        public double Initial_Trend(int[] series, int slen)
        {
            var sum = 0.0;
            for (int i = 0; i < slen; i++)
            {
                sum += (series[i + slen] - series[i]) / slen;
            }

            return sum / slen;
        }

        public List<double> Initial_Seasonal_Components(int[] series, int slen)
        {
            var seasonals = new List<double>();
            List<double> season_avg = new List<double>();
            int n_seasons = series.Length / slen;
            // compute season averages
            for (int i = 0; i < n_seasons; i++)
            {
                List<int> season_averages = series.Skip(slen * i).Take(slen).ToList();
                int sum = season_averages.Sum();
                double dividedSum = sum / (double) slen;
                season_avg.Add(dividedSum);
            }

            //compute initial values
            for (int i = 0; i < slen; i++)
            {
                var sum_of_vals_over_avg = 0.0;
                for (int j = 0; j < n_seasons; j++)
                {
                    sum_of_vals_over_avg += series[slen * j + i] - season_avg.ToArray()[j];
                }

                seasonals.Add(sum_of_vals_over_avg / n_seasons);
            }

            return seasonals;
        }

        public List<double> Triple_Exponential_Smoothing(int[] series, int slen, double alpha, double beta,
            double gamma, int n_preds)
        {
            var seasonals = Initial_Seasonal_Components(series, slen).ToArray();

            List<double> result = new List<double>();

            var smooth = 0;
            double trend = 0.0;

            for (int i = 0; i < (series.Length + n_preds); i++)
            {
                //initial values
                if (i == 0)
                {
                    smooth = series[0];
                    trend = Initial_Trend(series, slen);
                    result.Add(series[0]);
                    continue;
                }

                // we are forecasting
                if (i >= series.Length)
                {
                    var m = i - series.Length + 1;
                    var item = ((smooth + m * trend) + seasonals[i % slen]);
                    result.Add(item);
                }
                else
                {
                    var value = series[i];
                    var last_smooth = smooth;
                    smooth = (int) (alpha * (value - seasonals[i % slen]) + (1 - alpha) * (smooth + trend));
                    trend = beta * (smooth - last_smooth) + (1 - beta) * trend;
                    seasonals[i % slen] = gamma * (value - smooth) + (1 - gamma) * seasonals[i % slen];
                    result.Add((int) (smooth + trend + seasonals[i % slen]));
                }
            }

            return result;
        }
    }

    class CallsData
    {
        public static int[] calls_for_2015_2016_2017 =
        {
            152451,
            194251,
            210412,
            181016,
            525273,
            642482,
            295396,
            176259,
            210734,
            243688,
            261892,
            254982,
            259845,
            253682,
            273112,
            255738,
            297823,
            301163,
            317221,
            338664,
            435900,
            644393,
            479380,
            793857,
            489127,
            420533,
            490381,
            453333,
            446795,
            412978,
            428445,
            451704,
            437799,
            489826,
            513805,
            1030613
        };

        public static int[] calls_for_2015_2016_2017_2018 =
        {
            152451,
            194251,
            210412,
            181016,
            525273,
            642482,
            295396,
            176259,
            210734,
            243688,
            261892,
            254982,
            259845,
            253682,
            273112,
            255738,
            297823,
            301163,
            317221,
            338664,
            435900,
            644393,
            479380,
            793857,
            489127,
            420533,
            490381,
            453333,
            446795,
            412978,
            428445,
            451704,
            437799,
            489826,
            513805,
            1030613,
            777190,
            570422,
            660678,
            639197,
            681245,
            673727,
            678418,
            708349,
            758861,
            939604,
            948833,
            941883
        };

        public static int[] aei_calls_for_2015_2016_2017_2018 =
        {
            325164,
            267680,
            303763,
            263126,
            275563,
            256183,
            259703,
            282148,
            285045,
            296722,
            304153,
            341763,
            332633,
            338694,
            359051,
            372404,
            354102,
            314757,
            391776,
            367481,
            350911,
            318707,
            319964,
            347293,
            335377,
            287594,
            231831,
            280767,
            273105,
            273023,
            264236,
            265070,
            241460,
            240067,
            238357,
            240264,
            236950,
            216565,
            240484,
            222584,
            227647,
            233030,
            241325,
            253944,
            225967,
            222185,
            235326,
            245497
        };

        public static int[] aei_calls_for_2015_2016_2017 =
        {
            325164,
            267680,
            303763,
            263126,
            275563,
            256183,
            259703,
            282148,
            285045,
            296722,
            304153,
            341763,
            332633,
            338694,
            359051,
            372404,
            354102,
            314757,
            391776,
            367481,
            350911,
            318707,
            319964,
            347293,
            335377,
            287594,
            231831,
            280767,
            273105,
            273023,
            264236,
            265070,
            241460,
            240067,
            238357,
            240264
        };

        public static int[] aAndF_calls_for_2015_2016_2017 =
        {
            89151,
            67004,
            65265,
            53701,
            55130,
            63375,
            73882,
            78770,
            64474,
            72778,
            121071,
            231945,
            109032,
            64603,
            57885,
            53218,
            57105,
            82058,
            96451,
            88074,
            74036,
            85940,
            129920,
            200433,
            95313,
            65211,
            68769,
            62817,
            57652,
            70428,
            83600,
            88111,
            63969,
            77432,
            151348,
            178605
        };

        public static int[] aAndF_calls_for_2015_2016_2017_2018 =
        {
            89151,
            67004,
            65265,
            53701,
            55130,
            63375,
            73882,
            78770,
            64474,
            72778,
            121071,
            231945,
            109032,
            64603,
            57885,
            53218,
            57105,
            82058,
            96451,
            88074,
            74036,
            85940,
            129920,
            200433,
            95313,
            65211,
            68769,
            62817,
            57652,
            70428,
            83600,
            88111,
            63969,
            77432,
            151348,
            178605,
            102169,
            56854,
            65898,
            61409,
            57784,
            71722,
            86632,
            80988,
            61760,
            88803,
            121892,
            178822
        };
        
        public static int[] calls_for_2015_2016 =
        {
            152451,
            194251,
            210412,
            181016,
            525273,
            642482,
            295396,
            176259,
            210734,
            243688,
            261892,
            254982,
            259845,
            253682,
            273112,
            255738,
            297823,
            301163,
            317221,
            338664,
            435900,
            644393,
            479380,
            793857
        };

        public static int[] calls_for_2015_2016_2017_by_date_AANDF =
        {
        };


        public static int[] calls_for_2015_2016_2017_2018_by_date_AANDF =
        {
            3994,
3351,
2295,
3902,
3942,
3669,
3938,
3758,
2645,
2078,
3060,
3339,
3400,
3133,
2616,
2136,
1558,
2245,
2592,
2641,
3754,
4494,
2555,
1531,
2399,
2822,
2744,
3085,
2936,
2010,
1289,
2095,
2372,
2465,
2540,
2259,
1482,
1233,
2134,
3321,
3243,
3355,
3023,
1840,
1484,
2635,
2598,
2735,
2683,
2989,
1718,
1293,
2754,
2877,
2995,
2770,
2738,
1998,
1446,
2935,
2788,
2798,
3108,
3014,
1842,
1259,
2429,
2592,
2344,
2275,
2252,
1572,
1114,
2344,
2748,
2703,
2157,
2378,
1581,
1210,
2259,
2310,
2161,
2378,
2070,
952,
1338,
973,
1101,
3006,
3057,
2436,
1732,
1146,
2360,
2683,
2672,
2721,
2379,
2004,
344,
2299,
2793,
2640,
2614,
2754,
1469,
1255,
2213,
2412,
1831,
2203,
2321,
1533,
1128,
2151,
2127,
1967,
2131,
1623,
1314,
1037,
1846,
1773,
1637,
2125,
2088,
1510,
880,
1686,
2145,
2138,
2169,
2136,
1297,
989,
1860,
1954,
1841,
2067,
2327,
1606,
1199,
1987,
2685,
2190,
2422,
2146,
1490,
933,
1835,
2108,
2622,
1211,
1818,
1474,
1053,
2382,
2715,
3256,
2509,
2713,
1745,
1252,
2395,
2243,
2732,
2434,
2263,
1618,
991,
2037,
2759,
2626,
2344,
2590,
1680,
923,
2214,
2374,
2544,
2640,
2169,
1368,
1060,
2417,
2538,
2484,
2538,
2449,
1553,
1158,
2109,
2493,
2799,
2939,
2966,
1808,
1286,
2458,
2764,
3634,
3335,
3214,
2050,
1521,
2801,
3098,
2713,
2794,
2654,
1770,
1146,
2442,
2600,
2595,
2560,
2851,
2046,
1366,
2692,
3692,
3396,
3158,
3058,
2036,
1713,
2931,
3220,
3299,
3368,
2845,
2018,
1438,
2168,
3139,
3130,
2864,
2731,
1889,
1402,
2618,
3016,
2907,
2826,
2621,
1847,
1317,
1855,
2582,
2762,
2445,
2456,
1765,
1306,
2474,
2736,
2517,
2373,
2337,
1644,
1344,
2322,
2314,
2318,
2232,
2045,
1318,
937,
1792,
2018,
2274,
2188,
1936,
1488,
1181,
2063,
2781,
2587,
2351,
1980,
1983,
1359,
2034,
3101,
2924,
3223,
2690,
1926,
1356,
2507,
2936,
3446,
3138,
3033,
1897,
1499,
2846,
2848,
2976,
3015,
2645,
1573,
1068,
2334,
3282,
3032,
2882,
3104,
2258,
1528,
2783,
3211,
3588,
3581,
3503,
2585,
1983,
3352,
3921,
4091,
4015,
3520,
2513,
2013,
3928,
4504,
4223,
5597,
11084,
7417,
5045,
9679,
10102,
7896,
9017,
8853,
6825,
4785,
9057,
10263,
10879,
10726,
10741,
6632,
4790,
9971,
11067,
11027,
10506,
9850,
7655,
5056,
8996,
9476,
8199,
5919,
4,
4407,
3568,
6239,
5917,
5549,
4162,
25,
3274,
2618,
5053,
5681,
5318,
5365,
5007,
3176,
2153,
3940,
4216,
4943,
4750,
4123,
2684,
1924,
3353,
3769,
4608,
4789,
4310,
2304,
1564,
2939,
3260,
3232,
3234,
3085,
1998,
1340,
2436,
2664,
2716,
2762,
2572,
1769,
1113,
1964,
1489,
2612,
2786,
2645,
1918,
1415,
2208,
2600,
2982,
2898,
2800,
1920,
1377,
2272,
2693,
2721,
2630,
2560,
157,
1223,
2423,
2536,
2116,
2785,
2754,
1792,
1126,
2093,
2257,
1962,
2377,
2171,
1409,
1057,
1659,
2091,
2201,
1878,
1910,
1359,
1061,
1664,
2042,
1919,
2139,
1800,
1353,
911,
1837,
2210,
1909,
2172,
1746,
1538,
1007,
1723,
2154,
2374,
2302,
2022,
1403,
1028,
2021,
2014,
2207,
2202,
2074,
1345,
1193,
1905,
1959,
1942,
1882,
1906,
1612,
1115,
1968,
2061,
1827,
1814,
1799,
1310,
906,
1539,
1705,
1617,
1890,
1848,
1262,
831,
1668,
1871,
2051,
2112,
1954,
1468,
1127,
1676,
2022,
2285,
2103,
1700,
1253,
1002,
1934,
2060,
2069,
2849,
2819,
1799,
1432,
2084,
3015,
2944,
2757,
2637,
1727,
1315,
2520,
2997,
3377,
3051,
2869,
1957,
1515,
2767,
2910,
3067,
3084,
3101,
1903,
1324,
2831,
3221,
3202,
3443,
3644,
2309,
1665,
3033,
3243,
3778,
3727,
3352,
2091,
1838,
2471,
3701,
3912,
3812,
3611,
2236,
1698,
3196,
3618,
4423,
4141,
3862,
2522,
1602,
3326,
3502,
4002,
4379,
3694,
2715,
1973,
3602,
4115,
3863,
3406,
2931,
1987,
1419,
2743,
3391,
3547,
3334,
3101,
2253,
1857,
3358,
3463,
3339,
3689,
3727,
2217,
1591,
3013,
3108,
3203,
3664,
3017,
2078,
1648,
2834,
2941,
2993,
3442,
2898,
1870,
1475,
2428,
2630,
2903,
3148,
2920,
1985,
1470,
2211,
2697,
2758,
2455,
2745,
2052,
1358,
2536,
2677,
2734,
2395,
2405,
1765,
1406,
2211,
2288,
3035,
3284,
3346,
1987,
1480,
2900,
2965,
3015,
2972,
3295,
1959,
1464,
2569,
3322,
3603,
3593,
3547,
2357,
1904,
2861,
3467,
3460,
3451,
3035,
2077,
1409,
2791,
3395,
3463,
3392,
3220,
2088,
1610,
2909,
3832,
3380,
3097,
2842,
1797,
1270,
2499,
2957,
3004,
2814,
3439,
2131,
1538,
2999,
3191,
2906,
3177,
3596,
2361,
1808,
3319,
4225,
3850,
3881,
4177,
3033,
2493,
4186,
4830,
5763,
4870,
9213,
6787,
4951,
10026,
9568,
6875,
7844,
8331,
6099,
4421,
8283,
9522,
8960,
8949,
8628,
5983,
4324,
7433,
8539,
8055,
8499,
8224,
5922,
4392,
7725,
8206,
8065,
7714,
7110,
4376,
1,
4134,
5737,
5421,
5334,
4707,
2974,
0,
3473,
4498,
4443,
4496,
4325,
2735,
1993,
3513,
3660,
3949,
4217,
4387,
2894,
1933,
3130,
3466,
3786,
3620,
3429,
2680,
1605,
2792,
3215,
2916,
2685,
2574,
1798,
1236,
2171,
2378,
2839,
2724,
2513,
1703,
1147,
1996,
2542,
2604,
2900,
2965,
2097,
1474,
2491,
2491,
2568,
2903,
2797,
1941,
1450,
2524,
2747,
2657,
2708,
2484,
1814,
1424,
2384,
2438,
2531,
2398,
2223,
1666,
1160,
1942,
2194,
2184,
2185,
2227,
1835,
1420,
2192,
2211,
2624,
2485,
2648,
1766,
1352,
2181,
2435,
2922,
3019,
2908,
2005,
1409,
2547,
2549,
2458,
2716,
2706,
1771,
1305,
2089,
2431,
2629,
2440,
2152,
1592,
1158,
2066,
2271,
2157,
2741,
2343,
1754,
1189,
2518,
3079,
3015,
2780,
2584,
1840,
1227,
2271,
2582,
2638,
2185,
1973,
1383,
926,
1558,
1873,
1790,
1954,
1904,
1379,
905,
1684,
1734,
1869,
1953,
1957,
1472,
1125,
1765,
2043,
2317,
2416,
2124,
1303,
1047,
1863,
2215,
2098,
2311,
2355,
1598,
1239,
2086,
2534,
2570,
2516,
2311,
1735,
1250,
2019,
2656,
2660,
2307,
2123,
1505,
1174,
2182,
2571,
2471,
2634,
2671,
1849,
1435,
2365,
2827,
3078,
2995,
3282,
2129,
1415,
2519,
2912,
2987,
2993,
2997,
2193,
1486,
2570,
2183,
3281,
3525,
3456,
2326,
1540,
2683,
3115,
3886,
3642,
3060,
2084,
1431,
2593,
3190,
2948,
3343,
3239,
2396,
1763,
3055,
3495,
3246,
2988,
2740,
1968,
1410,
2558,
2880,
2962,
3068,
3242,
2290,
1823,
3096,
3082,
3091,
3434,
3647,
2490,
2058,
3368,
3187,
3426,
3334,
3251,
2193,
1539,
2824,
3249,
3227,
2894,
2781,
2057,
1665,
2745,
2700,
3146,
3172,
2948,
2296,
1855,
2325,
3252,
2796,
2714,
2740,
1771,
1229,
690,
1857,
3225,
3167,
2695,
1703,
1151,
2087,
2147,
2527,
2269,
2393,
1552,
1070,
1779,
2145,
2463,
1994,
2331,
1653,
1346,
2135,
2738,
2668,
2797,
3029,
1961,
1524,
2467,
2904,
2994,
2704,
2724,
1906,
1377,
2505,
3350,
3208,
3394,
3137,
2002,
1499,
2731,
2943,
2895,
3092,
2778,
1796,
1391,
2669,
2455,
2229,
2466,
2795,
2283,
1989,
3175,
3147,
3239,
2740,
2964,
2247,
1659,
2971,
3103,
3352,
3567,
3377,
2444,
1908,
3364,
3881,
6617,
4819,
8372,
5710,
4284,
8345,
8322,
6249,
7075,
7526,
5794,
4434,
7139,
8136,
7499,
7352,
7008,
5056,
3870,
7093,
7899,
7408,
7115,
7558,
5414,
4105,
7399,
7570,
7658,
7224,
6758,
5107,
2896,
0,
4638,
6110,
5567,
4976,
3688,
2337,
0,
4697,
4919,
5345,
5239,
3660,
2561,
3802,
4856,
4623,
4088,
4217,
2933,
1958,
3270,
3981,
4318,
3863,
3247,
2464,
1619,
2813,
2919,
2814,
2711,
2586,
2057,
1477,
2396,
2733,
2706,
2620,
2143,
1798,
1330,
1971,
2315,
2413,
2402,
2383,
1659,
1262,
1963,
2125,
2210,
2293,
2176,
1691,
1374,
1965,
2166,
2249,
2425,
2321,
1720,
1275,
2092,
2418,
2309,
2233,
2180,
1805,
1473,
2029,
2190,
2229,
2010,
2172,
1986,
1560,
2473,
2465,
2298,
2426,
2450,
1995,
1328,
2107,
2420,
2555,
2271,
2241,
1800,
1455,
2411,
2228,
2612,
2811,
2374,
1868,
1178,
2563,
3254,
2755,
2474,
2498,
1882,
1543,
2502,
2450,
2535,
2325,
2210,
1577,
1248,
2190,
2117,
2043,
2031,
2213,
1454,
1091,
1996,
2370,
2101,
1969,
1933,
1408,
1380,
1868,
1666,
2091,
2097,
1999,
1317,
998,
1646,
1846,
2051,
1831,
1974,
1427,
1085,
1935,
2154,
2289,
2185,
1906,
1458,
1093,
1469,
2084,
2039,
2277,
2381,
1653,
1308,
1905,
2464,
2468,
2398,
2205,
1764,
1473,
2323,
2460,
2807,
2498,
2312,
1643,
1385,
2346,
2883,
2958,
3197,
2860,
1950,
1430,
2860,
2934,
3097,
2966,
2626,
1850,
1401,
2416,
2649,
3001,
3006,
2916,
1934,
1486,
2784,
2953,
2470,
3343,
3220,
2117,
1604,
3165,
3674,
3816,
3558,
3197,
2135,
1533,
2709,
3101,
3328,
3314,
3059,
2288,
1662,
2842,
3215,
3078,
3080,
3353,
2281,
1527,
2728,
3098,
3261,
3309,
3332,
2434,
1911,
2951,
3193,
3144,
3058,
3206,
2339,
1937,
2988,
3132,
3127,
3293,
2992,
2033,
1510,
2457,
2773,
2662,
2769,
2408,
1711,
1372,
2197,
2435,
2784,
2667,
2372,
1865,
1349,
1872,
2567,
2465,
2253,
2481,
1919,
1316,
2378,
2480,
2494,
2439,
2156,
1547,
1063,
2062,
2153,
2216,
2178,
2298,
1471,
1267,
1960,
2207,
2610,
2785,
2589,
1672,
1325,
2242,
2602,
2852,
3245,
3054,
1938,
1402,
2395,
2935,
3105,
2927,
2829,
1960,
1383,
2882,
3423,
3517,
3832,
3281,
2254,
1729,
3155,
3461,
3454,
3325,
2817,
1956,
1556,
2897,
3149,
3050,
2995,
3130,
2271,
1818,
2903,
3071,
3208,
3005,
3018,
2364,
1850,
2902,
3504,
3404,
3294,
3206,
2497,
1895,
2869,
3696,
6305,
2570,
8838,
6409,
4619,
8497,
7675,
6313,
6541,
6540,
4912,
3726,
7230,
7169,
7025,
6900,
7336,
5643,
4216,
7198,
7222,
7073,
7301,
6924,
5900,
4529,
7765,
7528,
7962,
7613,
7374,
5579,
3741,
4035,
27,
5438,
6604,
5982,
4316,
3135,
3607,
160,
5455


        };



    }
}